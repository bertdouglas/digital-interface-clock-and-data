

Microchip Technology PIC PRO Macro Assembler V1.10 build 47796 
                                                                                               Wed Dec 12 11:22:06 2012

HI-TECH Software Omniscient Code Generator (PRO mode) build 47796
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text84,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	text87,local,class=CODE,merge=1,delta=2
     9                           	psect	pa_nodes,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  000D                     	;# 
    25  000E                     	;# 
    26  0011                     	;# 
    27  0012                     	;# 
    28  0013                     	;# 
    29  0014                     	;# 
    30  0015                     	;# 
    31  0016                     	;# 
    32  0016                     	;# 
    33  0017                     	;# 
    34  0018                     	;# 
    35  0019                     	;# 
    36  001A                     	;# 
    37  001B                     	;# 
    38  001C                     	;# 
    39  001E                     	;# 
    40  001F                     	;# 
    41  008C                     	;# 
    42  008D                     	;# 
    43  008E                     	;# 
    44  0091                     	;# 
    45  0092                     	;# 
    46  0093                     	;# 
    47  0094                     	;# 
    48  0095                     	;# 
    49  0096                     	;# 
    50  0097                     	;# 
    51  0098                     	;# 
    52  0099                     	;# 
    53  009A                     	;# 
    54  009B                     	;# 
    55  009B                     	;# 
    56  009C                     	;# 
    57  009D                     	;# 
    58  009E                     	;# 
    59  010C                     	;# 
    60  010D                     	;# 
    61  010E                     	;# 
    62  0111                     	;# 
    63  0112                     	;# 
    64  0113                     	;# 
    65  0114                     	;# 
    66  0115                     	;# 
    67  0116                     	;# 
    68  0117                     	;# 
    69  0118                     	;# 
    70  0119                     	;# 
    71  011A                     	;# 
    72  011B                     	;# 
    73  011D                     	;# 
    74  011E                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77  018E                     	;# 
    78  0191                     	;# 
    79  0191                     	;# 
    80  0192                     	;# 
    81  0193                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0194                     	;# 
    85  0195                     	;# 
    86  0196                     	;# 
    87  0199                     	;# 
    88  019A                     	;# 
    89  019B                     	;# 
    90  019B                     	;# 
    91  019C                     	;# 
    92  019D                     	;# 
    93  019E                     	;# 
    94  019F                     	;# 
    95  020C                     	;# 
    96  020D                     	;# 
    97  020E                     	;# 
    98  0211                     	;# 
    99  0211                     	;# 
   100  0212                     	;# 
   101  0212                     	;# 
   102  0213                     	;# 
   103  0213                     	;# 
   104  0214                     	;# 
   105  0214                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0215                     	;# 
   109  0216                     	;# 
   110  0216                     	;# 
   111  0217                     	;# 
   112  0217                     	;# 
   113  0219                     	;# 
   114  021A                     	;# 
   115  021B                     	;# 
   116  021C                     	;# 
   117  021D                     	;# 
   118  021E                     	;# 
   119  021F                     	;# 
   120  0291                     	;# 
   121  0292                     	;# 
   122  0293                     	;# 
   123  0294                     	;# 
   124  0295                     	;# 
   125  0295                     	;# 
   126  0296                     	;# 
   127  0298                     	;# 
   128  0299                     	;# 
   129  029A                     	;# 
   130  029B                     	;# 
   131  029C                     	;# 
   132  029D                     	;# 
   133  029E                     	;# 
   134  0311                     	;# 
   135  0312                     	;# 
   136  0313                     	;# 
   137  0318                     	;# 
   138  0319                     	;# 
   139  031A                     	;# 
   140  038C                     	;# 
   141  038D                     	;# 
   142  038E                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0394                     	;# 
   147  0395                     	;# 
   148  0396                     	;# 
   149  039A                     	;# 
   150  039C                     	;# 
   151  039D                     	;# 
   152  039E                     	;# 
   153  039F                     	;# 
   154  0415                     	;# 
   155  0416                     	;# 
   156  0417                     	;# 
   157  041C                     	;# 
   158  041D                     	;# 
   159  041E                     	;# 
   160  0FE4                     	;# 
   161  0FE5                     	;# 
   162  0FE6                     	;# 
   163  0FE7                     	;# 
   164  0FE8                     	;# 
   165  0FE9                     	;# 
   166  0FEA                     	;# 
   167  0FEB                     	;# 
   168  0FED                     	;# 
   169  0FEE                     	;# 
   170  0FEF                     	;# 
   171  009D                     _ADCON0	set	157
   172  009E                     _ADCON1	set	158
   173  009C                     _ADRESH	set	156
   174  0099                     _OSCCON	set	153
   175  008C                     _TRISAbits	set	140
   176  008E                     _TRISC	set	142
   177  04E9                     _GO	set	1257
   178  010E                     _LATC	set	270
   179  018C                     _ANSELAbits	set	396
   180                           
   181                           	psect	text84
   182  0000                     __ptext84:	
   183                           
   184                           ;psect for function _adc
   185                           ; #config settings
   186  0000                     
   187                           	psect	cinit
   188  07B0                     start_initialization:	
   189  07B0                     __initialization:	
   190                           
   191                           ; Clear objects allocated to BANK0
   192  07B0  01A0               	clrf	__pbssBANK0& (0+127)
   193  07B1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   194  07B2                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197  07B2                     __end_of__initialization:	
   198  07B2  0020               	movlb	0
   199  07B3  2FB4               	ljmp	_main	;jump to C main() function
   200  07B4                     __pmaintext:	
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 52 in file "../indirect_addressing.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;  queue           8    4[COMMON] unsigned char [8]
   211 ;;  i               1   13[COMMON] unsigned char 
   212 ;;  ptr_queue       1   12[COMMON] PTR unsigned char 
   213 ;;		 -> main@queue(8), 
   214 ;; Return value:  Size  Location     Type
   215 ;;		None               void
   216 ;; Registers used:
   217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 17F/0
   220 ;;		On exit  : 1F/2
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   224 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   226 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   227 ;;Total ram usage:       11 bytes
   228 ;; Hardware stack levels required when called:    2
   229 ;; This function calls:
   230 ;;		_average
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  07B4                     _main:	
   239                           
   240                           ;indirect_addressing.c: 53: unsigned char *ptr_queue;
   241                           ;indirect_addressing.c: 54: unsigned char queue[8] = {0};
   242                           
   243                           ; Regs used in _main: [wreg+fsr1l-status,0+pclath+cstack]
   244  07B4  3074               	movlw	low main@queue
   245  07B5  0086               	movwf	6
   246  07B6  3000               	movlw	high main@queue
   247  07B7  0087               	movwf	7
   248  07B8  3008               	movlw	8
   249  07B9  00F3               	movwf	??_main
   250  07BA  3000               	movlw	0
   251  07BB                     u50:	
   252  07BB  001E               	movwi fsr1++
   253  07BC  0BF3               	decfsz	??_main,f
   254  07BD  2FBB               	goto	u50
   255                           
   256                           ;indirect_addressing.c: 55: unsigned char i;
   257                           ;indirect_addressing.c: 57: OSCCON = 0b00111000;
   258  07BE  3038               	movlw	56
   259  07BF  0021               	movlb	1	; select bank1
   260  07C0  0099               	movwf	25	;volatile
   261                           
   262                           ;indirect_addressing.c: 58: TRISC = 0;
   263  07C1  018E               	clrf	14	;volatile
   264                           
   265                           ;indirect_addressing.c: 60: TRISAbits.TRISA4 = 1;
   266  07C2  160C               	bsf	12,4	;volatile
   267                           
   268                           ;indirect_addressing.c: 61: ANSELAbits.ANSA4 = 1;
   269  07C3  0023               	movlb	3	; select bank3
   270  07C4  160C               	bsf	12,4	;volatile
   271                           
   272                           ;indirect_addressing.c: 62: ADCON0 = 0b00001101;
   273  07C5  300D               	movlw	13
   274  07C6  0021               	movlb	1	; select bank1
   275  07C7  009D               	movwf	29	;volatile
   276                           
   277                           ;indirect_addressing.c: 63: ADCON1 = 0b00010000;
   278  07C8  3010               	movlw	16
   279  07C9  009E               	movwf	30	;volatile
   280  07CA                     l3874:	
   281                           
   282                           ;indirect_addressing.c: 66: ptr_queue = &queue;
   283  07CA  3074               	movlw	main@queue& (0+255)
   284  07CB  00FC               	movwf	main@ptr_queue
   285                           
   286                           ;indirect_addressing.c: 67: for (i = 8; i != 0; i--){
   287  07CC  3008               	movlw	8
   288  07CD  00FD               	movwf	main@i
   289  07CE                     l3882:	
   290                           
   291                           ;indirect_addressing.c: 68: LATC = (average(ptr_queue) >> 4 );
   292  07CE  087C               	movf	main@ptr_queue,w
   293  07CF  27DA  3187         	fcall	_average
   294  07D1  0E89               	swapf	9,f
   295  07D2  390F               	andlw	15
   296  07D3  0022               	movlb	2	; select bank2
   297  07D4  008E               	movwf	14	;volatile
   298                           
   299                           ;indirect_addressing.c: 69: ptr_queue++;
   300  07D5  0AFC               	incf	main@ptr_queue,f
   301  07D6  03FD               	decf	main@i,f
   302  07D7  1903               	btfsc	3,2
   303  07D8  2FCA               	goto	l3874
   304  07D9  2FCE               	goto	l3882
   305  07DA                     __end_of_main:	
   306  07DA                     __ptext85:	
   307 ;; *************** function _average *****************
   308 ;; Defined at:
   309 ;;		line 74 in file "../indirect_addressing.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  ptr             1    wreg     PTR unsigned char 
   312 ;;		 -> main@queue(8), 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  ptr             1    2[COMMON] PTR unsigned char 
   315 ;;		 -> main@queue(8), 
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      unsigned char 
   318 ;; Registers used:
   319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 1C/1
   322 ;;		On exit  : 1F/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   328 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   329 ;;Total ram usage:        3 bytes
   330 ;; Hardware stack levels used:    1
   331 ;; Hardware stack levels required when called:    1
   332 ;; This function calls:
   333 ;;		_adc
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _average
   341  07DA                     _average:	
   342                           
   343                           ; Regs used in _average: [wreg+fsr1l-status,0+pclath+cstack]
   344                           ;average@ptr stored from wreg
   345  07DA  00F2               	movwf	average@ptr
   346                           
   347                           ;indirect_addressing.c: 76: _sum -= *ptr;
   348  07DB  0086               	movwf	6
   349  07DC  0187               	clrf	7
   350  07DD  0801               	movf	1,w
   351  07DE  0020               	movlb	0	; select bank0
   352  07DF  02A0               	subwf	__sum,f
   353  07E0  1C03               	skipc
   354  07E1  03A1               	decf	__sum+1,f
   355                           
   356                           ;indirect_addressing.c: 77: *ptr = adc();
   357  07E2  0872               	movf	average@ptr,w
   358  07E3  0086               	movwf	6
   359  07E4  27FA               	fcall	_adc
   360  07E5  0081               	movwf	1
   361                           
   362                           ;indirect_addressing.c: 78: _sum += *ptr;
   363  07E6  0872               	movf	average@ptr,w
   364  07E7  0086               	movwf	6
   365  07E8  0187               	clrf	7
   366  07E9  0801               	movf	1,w
   367  07EA  0020               	movlb	0	; select bank0
   368  07EB  07A0               	addwf	__sum,f
   369  07EC  1803               	skipnc
   370  07ED  0AA1               	incf	__sum+1,f
   371                           
   372                           ;indirect_addressing.c: 79: return (_sum/8);
   373  07EE  0821               	movf	__sum+1,w
   374  07EF  00F1               	movwf	??_average+1
   375  07F0  0820               	movf	__sum,w
   376  07F1  00F0               	movwf	??_average
   377  07F2  36F1               	lsrf	??_average+1,f
   378  07F3  0CF0               	rrf	??_average,f
   379  07F4  36F1               	lsrf	??_average+1,f
   380  07F5  0CF0               	rrf	??_average,f
   381  07F6  36F1               	lsrf	??_average+1,f
   382  07F7  0CF0               	rrf	??_average,f
   383  07F8  0870               	movf	??_average,w
   384  07F9  0008               	return
   385  07FA                     __end_of_average:	
   386  07FA                     __ptext86:	
   387 ;; *************** function _adc *****************
   388 ;; Defined at:
   389 ;;		line 83 in file "../indirect_addressing.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      unsigned char 
   396 ;; Registers used:
   397 ;;		wreg
   398 ;; Tracked objects:
   399 ;;		On entry : 1F/0
   400 ;;		On exit  : 1F/1
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_average
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _adc
   418  07FA                     _adc:	
   419                           
   420                           ;indirect_addressing.c: 84: _delay((unsigned long)((5)*(500000/4000000.0)));
   421                           ;indirect_addressing.c: 85: GO = 1;
   422                           
   423                           ; Regs used in _adc: [wreg]
   424  07FA  0021               	movlb	1	; select bank1
   425  07FB  149D               	bsf	29,1	;volatile
   426  07FC                     l1690:	
   427                           ;indirect_addressing.c: 86: while (GO) continue;
   428                           
   429  07FC  189D               	btfsc	29,1	;volatile
   430  07FD  2FFC               	goto	l1690
   431                           
   432                           ;indirect_addressing.c: 88: return ADRESH;
   433  07FE  081C               	movf	28,w	;volatile
   434  07FF  0008               	return
   435  0800                     __end_of_adc:	
   436                           
   437                           	psect	bssBANK0
   438  0020                     __pbssBANK0:	
   439  0020                     __sum:	
   440  0020                     	ds	2
   441                           
   442                           	psect	cstackCOMMON
   443  0070                     __pcstackCOMMON:	
   444  0070                     ??_average:	
   445  0070                     ??_adc:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_average:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ?_adc:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 1 bytes @ 0x0
   459  0070                     	ds	2
   460  0072                     average@ptr:	
   461                           
   462                           ; 1 bytes @ 0x2
   463  0072                     	ds	1
   464  0073                     ??_main:	
   465                           
   466                           ; 0 bytes @ 0x3
   467  0073                     	ds	1
   468  0074                     main@queue:	
   469                           
   470                           ; 8 bytes @ 0x4
   471  0074                     	ds	8
   472  007C                     main@ptr_queue:	
   473                           
   474                           ; 1 bytes @ 0xC
   475  007C                     	ds	1
   476  007D                     main@i:	
   477                           
   478                           ; 1 bytes @ 0xD
   479  007D                     	ds	1
   480                           
   481                           	psect	text87
   482  0000                     __ptext87:	
   483                           
   484                           ;psect for function _adc
   485  007E                     btemp	set	126	;btemp
   486  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    average@ptr	PTR unsigned char  size(1) Largest target is 8
		 -> main@queue(COMMON[8]), 

    main@ptr_queue	PTR unsigned char  size(1) Largest target is 8
		 -> main@queue(COMMON[8]), 


Critical Paths under _main in COMMON

    _main->_average

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     163
                                              3 COMMON    11    11      0
                            _average
 ---------------------------------------------------------------------------------
 (1) _average                                              3     3      0      66
                                              0 COMMON     3     3      0
                                _adc
 ---------------------------------------------------------------------------------
 (2) _adc                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _average
     _adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      10      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      12      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Wed Dec 12 11:22:06 2012

            __CFG_CP$OFF 0000                       _GO 04E9                       u50 07BB  
           __CFG_CPD$OFF 0000                      _adc 07FA                      wreg 0009  
           __CFG_LVP$OFF 0000                     ?_adc 0070                     l1690 07FC  
                   l3882 07CE                     l3874 07CA                     _LATC 010E  
           __CFG_WRT$OFF 0000                     __sum 0020                     _main 07B4  
                   fsr1h 0007                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0002  
          __CFG_IESO$OFF 0000                    ??_adc 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _TRISC 008E           __CFG_FCMEN$OFF 0000  
        __end_of_average 07FA                    main@i 007D                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 07B0             __end_of_main 07DA  
                 ??_main 0073           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _OSCCON 0099  
         __CFG_PWRTE$OFF 0000                ??_average 0070            main@ptr_queue 007C  
__end_of__initialization 07B2           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 07B4          __CFG_STVREN$OFF 0000                  _average 07DA  
           __size_of_adc 0006     end_of_initialization 07B2         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C               average@ptr 0072      start_initialization 07B0  
            __end_of_adc 0800                 ?_average 0070                main@queue 0074  
             _ANSELAbits 018C         __size_of_average 0020                 __ptext84 0000  
               __ptext85 07DA                 __ptext86 07FA                 __ptext87 0000  
          __size_of_main 0026        __CFG_CLKOUTEN$OFF 0000  
